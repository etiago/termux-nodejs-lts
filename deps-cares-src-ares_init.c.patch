diff -u -r ../node-v4.4.3/deps/cares/src/ares_init.c ./deps/cares/src/ares_init.c > deps-cares-src-ares_init.c.patch
--- ../node-v4.4.3/deps/cares/src/ares_init.c	2016-04-12 19:42:04.000000000 +0000
+++ ./deps/cares/src/ares_init.c	2016-04-19 09:22:16.773767305 +0000
@@ -43,7 +43,35 @@
 #endif
 
 #if defined(ANDROID) || defined(__ANDROID__)
+# ifdef __LP64__
+# include <dlfcn.h>
+// http://stackoverflow.com/questions/28413530/api-to-get-android-system-properties-is-removed-in-arm64-platforms
+// Android 'L' makes __system_property_get a non-global symbol.
+// Here we provide a stub which loads the symbol from libc via dlsym.
+#define PROP_NAME_MAX 31
+#define PROP_VALUE_MAX 91
+typedef int (*PFN_SYSTEM_PROP_GET)(const char *, char *);
+int __system_property_get(const char* name, char* value)
+{
+	static PFN_SYSTEM_PROP_GET __real_system_property_get = NULL;
+	if (!__real_system_property_get) {
+		// libc.so should already be open, get a handle to it.
+		void *handle = dlopen("libc.so", RTLD_NOLOAD);
+		if (!handle) {
+			printf("Cannot dlopen libc.so: %s.\n", dlerror());
+		} else {
+			__real_system_property_get = (PFN_SYSTEM_PROP_GET)dlsym(handle, "__system_property_get");
+		}
+		if (!__real_system_property_get) {
+			printf("Cannot resolve __system_property_get(): %s.\n", dlerror());
+		}
+	}
+	return (*__real_system_property_get)(name, value);
+} 
+# else
 #include <sys/system_properties.h>
+#endif
+
 /* From the Bionic sources */
 #define DNS_PROP_NAME_PREFIX  "net.dns"
 #define MAX_DNS_PROPERTIES    8
